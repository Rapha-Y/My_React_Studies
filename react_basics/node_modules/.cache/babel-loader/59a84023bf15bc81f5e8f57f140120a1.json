{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anni\\\\Documents\\\\Projects\\\\My_React_Studies\\\\react_basics\\\\src\\\\components\\\\MemeGenerator.js\";\nimport React from 'react';\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"https://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleGen = this.handleGen.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(response => {\n      this.setState({\n        allMemeImgs: response.data.memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(value);\n  }\n\n  handleGen() {\n    let randomMeme = this.state.allMemeImgs[Math.floor(Math.random() * this.state.allMemeImgs.length)];\n    this.setState({\n      randomImage: randomMeme.url\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.topText,\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.bottomText,\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Gen\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.randomImage,\n      alt: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["C:/Users/Anni/Documents/Projects/My_React_Studies/react_basics/src/components/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleGen","componentDidMount","fetch","then","res","json","response","setState","data","memes","event","name","value","target","console","log","randomMeme","Math","floor","random","length","url","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"https://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleGen = this.handleGen.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    allMemeImgs: response.data.memes\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        console.log(value)\r\n    }\r\n\r\n    handleGen() {\r\n        let randomMeme = this.state.allMemeImgs[Math.floor(Math.random() * this.state.allMemeImgs.length)]\r\n        this.setState({\r\n            randomImage: randomMeme.url\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.topText} \r\n                        name=\"topText\" \r\n                        placeholder=\"Top Text\"\r\n                        onChange={this.handleChange} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.bottomText} \r\n                        name=\"bottomText\" \r\n                        placeholder=\"Bottom Text\"\r\n                        onChange={this.handleChange} \r\n                    />\r\n                    <button>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.randomImage} alt=\"meme\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}