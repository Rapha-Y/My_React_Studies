{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anni\\\\Documents\\\\Projects\\\\My_React_Studies\\\\react_basics\\\\src\\\\FormContainer.js\";\nimport React from 'react';\nimport FormComponent from './FormComponent';\n\nclass FormContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      gender: \"\",\n      destination: \"\",\n      peanuts: false,\n      milk: false,\n      egg: false,\n      wheat: false,\n      fish: false,\n      shellfish: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    type === \"checkbox\" ? this.setState({\n      [name]: checked\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  renderDiet() {\n    const restrictions = [\"peanuts\", \"milk\", \"egg\", \"wheat\", \"fish\", \"shellfish\"];\n    const checks = [this.state.peanuts, this.state.milk, this.state.egg, this.state.wheat, this.state.fish, this.state.shellfish];\n    let output = \"\";\n\n    for (let i = 0; i < restrictions.length; i++) {\n      if (checks[i]) {\n        if (output.length === 0) {\n          let firstWord = restrictions[i];\n          firstWord = firstWord[0].toUpperCase() + firstWord.slice(1);\n          output = output.concat(firstWord);\n        } else {\n          output = output.concat(\", \");\n          output = output.concat(restrictions[i]);\n        }\n      }\n    }\n\n    return output;\n  }\n\n  render() {\n    /*#__PURE__*/\n    React.createElement(FormComponent, {\n      handleChange: this.handleChange,\n      renderDiet: this.renderDiet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["C:/Users/Anni/Documents/Projects/My_React_Studies/react_basics/src/FormContainer.js"],"names":["React","FormComponent","FormContainer","Component","constructor","state","firstName","lastName","age","gender","destination","peanuts","milk","egg","wheat","fish","shellfish","handleChange","bind","event","name","value","type","checked","target","setState","renderDiet","restrictions","checks","output","i","length","firstWord","toUpperCase","slice","concat","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,MAAM,EAAE,EAJC;AAKTC,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,OAAO,EAAE,KANA;AAOTC,MAAAA,IAAI,EAAE,KAPG;AAQTC,MAAAA,GAAG,EAAE,KARI;AASTC,MAAAA,KAAK,EAAE,KATE;AAUTC,MAAAA,IAAI,EAAE,KAVG;AAWTC,MAAAA,SAAS,EAAE;AAXF,KAAb;AAaA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,QAA+BJ,KAAK,CAACK,MAA3C;AACAF,IAAAA,IAAI,KAAK,UAAT,GACA,KAAKG,QAAL,CAAc;AACV,OAACL,IAAD,GAAQG;AADE,KAAd,CADA,GAIA,KAAKE,QAAL,CAAc;AACV,OAACL,IAAD,GAAQC;AADE,KAAd,CAJA;AAOH;;AAEDK,EAAAA,UAAU,GAAG;AACT,UAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,MAApC,EAA4C,WAA5C,CAArB;AACA,UAAMC,MAAM,GAAG,CACX,KAAKvB,KAAL,CAAWM,OADA,EAEX,KAAKN,KAAL,CAAWO,IAFA,EAGX,KAAKP,KAAL,CAAWQ,GAHA,EAIX,KAAKR,KAAL,CAAWS,KAJA,EAKX,KAAKT,KAAL,CAAWU,IALA,EAMX,KAAKV,KAAL,CAAWW,SANA,CAAf;AASA,QAAIa,MAAM,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,UAAIF,MAAM,CAACE,CAAD,CAAV,EAAe;AACX,YAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACrB,cAAIC,SAAS,GAAGL,YAAY,CAACG,CAAD,CAA5B;AACAE,UAAAA,SAAS,GAAGA,SAAS,CAAC,CAAD,CAAT,CAAaC,WAAb,KAA6BD,SAAS,CAACE,KAAV,CAAgB,CAAhB,CAAzC;AACAL,UAAAA,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAcH,SAAd,CAAT;AACH,SAJD,MAIO;AACHH,UAAAA,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAc,IAAd,CAAT;AACAN,UAAAA,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAcR,YAAY,CAACG,CAAD,CAA1B,CAAT;AACH;AACJ;AACJ;;AAED,WAAOD,MAAP;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL;AAAA,wBAAC,aAAD;AACI,MAAA,YAAY,EAAE,KAAKnB,YADvB;AAEI,MAAA,UAAU,EAAE,KAAKS,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH;;AAhEuC;;AAmE5C,eAAexB,aAAf","sourcesContent":["import React from 'react'\r\n\r\nimport FormComponent from './FormComponent'\r\n\r\nclass FormContainer extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            age: \"\",\r\n            gender: \"\",\r\n            destination: \"\",\r\n            peanuts: false,\r\n            milk: false,\r\n            egg: false,\r\n            wheat: false,\r\n            fish: false,\r\n            shellfish: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? \r\n        this.setState({\r\n            [name]: checked\r\n        }) : \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    renderDiet() {\r\n        const restrictions = [\"peanuts\", \"milk\", \"egg\", \"wheat\", \"fish\", \"shellfish\"]\r\n        const checks = [\r\n            this.state.peanuts,\r\n            this.state.milk,\r\n            this.state.egg,\r\n            this.state.wheat,\r\n            this.state.fish,\r\n            this.state.shellfish\r\n        ]\r\n\r\n        let output = \"\"\r\n        \r\n        for (let i = 0; i < restrictions.length; i++) {\r\n            if (checks[i]) {\r\n                if (output.length === 0) {\r\n                    let firstWord = restrictions[i]\r\n                    firstWord = firstWord[0].toUpperCase() + firstWord.slice(1)\r\n                    output = output.concat(firstWord)\r\n                } else {\r\n                    output = output.concat(\", \")\r\n                    output = output.concat(restrictions[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        return output\r\n    }\r\n\r\n    render() {\r\n        <FormComponent \r\n            handleChange={this.handleChange}\r\n            renderDiet={this.renderDiet}\r\n        />\r\n    }\r\n}\r\n\r\nexport default FormContainer"]},"metadata":{},"sourceType":"module"}